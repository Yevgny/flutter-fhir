part of 'resource.dart';

/// Acts like a constructor, returns a [Resource], accepts a
/// [Map<String, Dynamic>] as an argument
Resource _resourceFromJson(Map<String, dynamic> json) {
  final Stu3ResourceType? resourceType =
      resourceTypeFromStringMap[json['resourceType']];
  return switch (resourceType) {
    Stu3ResourceType.Account => Account.fromJson(json),
    Stu3ResourceType.ActivityDefinition => ActivityDefinition.fromJson(json),
    Stu3ResourceType.AdverseEvent => AdverseEvent.fromJson(json),
    Stu3ResourceType.AllergyIntolerance => AllergyIntolerance.fromJson(json),
    Stu3ResourceType.Appointment => Appointment.fromJson(json),
    Stu3ResourceType.AppointmentResponse => AppointmentResponse.fromJson(json),
    Stu3ResourceType.AuditEvent => AuditEvent.fromJson(json),
    Stu3ResourceType.Basic => Basic.fromJson(json),
    Stu3ResourceType.Binary => Binary.fromJson(json),
    Stu3ResourceType.BodySite => BodySite.fromJson(json),
    Stu3ResourceType.Bundle => Bundle.fromJson(json),
    Stu3ResourceType.CapabilityStatement => CapabilityStatement.fromJson(json),
    Stu3ResourceType.CarePlan => CarePlan.fromJson(json),
    Stu3ResourceType.CareTeam => CareTeam.fromJson(json),
    Stu3ResourceType.ChargeItem => ChargeItem.fromJson(json),
    Stu3ResourceType.Claim => Claim.fromJson(json),
    Stu3ResourceType.ClaimResponse => ClaimResponse.fromJson(json),
    Stu3ResourceType.ClinicalImpression => ClinicalImpression.fromJson(json),
    Stu3ResourceType.CodeSystem => CodeSystem.fromJson(json),
    Stu3ResourceType.Communication => Communication.fromJson(json),
    Stu3ResourceType.CommunicationRequest =>
      CommunicationRequest.fromJson(json),
    Stu3ResourceType.CompartmentDefinition =>
      CompartmentDefinition.fromJson(json),
    Stu3ResourceType.Composition => Composition.fromJson(json),
    Stu3ResourceType.ConceptMap => ConceptMap.fromJson(json),
    Stu3ResourceType.Condition => Condition.fromJson(json),
    Stu3ResourceType.Consent => Consent.fromJson(json),
    Stu3ResourceType.Contract => Contract.fromJson(json),
    Stu3ResourceType.Coverage => Coverage.fromJson(json),
    Stu3ResourceType.DataElement => DataElement.fromJson(json),
    Stu3ResourceType.DetectedIssue => DetectedIssue.fromJson(json),
    Stu3ResourceType.Device => Device.fromJson(json),
    Stu3ResourceType.DeviceComponent => DeviceComponent.fromJson(json),
    Stu3ResourceType.DeviceMetric => DeviceMetric.fromJson(json),
    Stu3ResourceType.DeviceRequest => DeviceRequest.fromJson(json),
    Stu3ResourceType.DeviceUseStatement => DeviceUseStatement.fromJson(json),
    Stu3ResourceType.DiagnosticReport => DiagnosticReport.fromJson(json),
    Stu3ResourceType.DocumentManifest => DocumentManifest.fromJson(json),
    Stu3ResourceType.DocumentReference => DocumentReference.fromJson(json),
    Stu3ResourceType.EligibilityRequest => EligibilityRequest.fromJson(json),
    Stu3ResourceType.EligibilityResponse => EligibilityResponse.fromJson(json),
    Stu3ResourceType.Encounter => Encounter.fromJson(json),
    Stu3ResourceType.Endpoint => FhirEndpoint.fromJson(json),
    Stu3ResourceType.EnrollmentRequest => EnrollmentRequest.fromJson(json),
    Stu3ResourceType.EnrollmentResponse => EnrollmentResponse.fromJson(json),
    Stu3ResourceType.EpisodeOfCare => EpisodeOfCare.fromJson(json),
    Stu3ResourceType.ExpansionProfile => ExpansionProfile.fromJson(json),
    Stu3ResourceType.ExplanationOfBenefit =>
      ExplanationOfBenefit.fromJson(json),
    Stu3ResourceType.FamilyMemberHistory => FamilyMemberHistory.fromJson(json),
    Stu3ResourceType.Flag => Flag.fromJson(json),
    Stu3ResourceType.Goal => Goal.fromJson(json),
    Stu3ResourceType.GraphDefinition => GraphDefinition.fromJson(json),
    Stu3ResourceType.Group => FhirGroup.fromJson(json),
    Stu3ResourceType.GuidanceResponse => GuidanceResponse.fromJson(json),
    Stu3ResourceType.HealthcareService => HealthcareService.fromJson(json),
    Stu3ResourceType.ImagingManifest => ImagingManifest.fromJson(json),
    Stu3ResourceType.ImagingStudy => ImagingStudy.fromJson(json),
    Stu3ResourceType.Immunization => Immunization.fromJson(json),
    Stu3ResourceType.ImmunizationRecommendation =>
      ImmunizationRecommendation.fromJson(json),
    Stu3ResourceType.ImplementationGuide => ImplementationGuide.fromJson(json),
    Stu3ResourceType.Library => Library.fromJson(json),
    Stu3ResourceType.Linkage => Linkage.fromJson(json),
    Stu3ResourceType.List => FhirList.fromJson(json),
    Stu3ResourceType.Location => Location.fromJson(json),
    Stu3ResourceType.Measure => Measure.fromJson(json),
    Stu3ResourceType.MeasureReport => MeasureReport.fromJson(json),
    Stu3ResourceType.Media => Media.fromJson(json),
    Stu3ResourceType.Medication => Medication.fromJson(json),
    Stu3ResourceType.MedicationAdministration =>
      MedicationAdministration.fromJson(json),
    Stu3ResourceType.MedicationDispense => MedicationDispense.fromJson(json),
    Stu3ResourceType.MedicationRequest => MedicationRequest.fromJson(json),
    Stu3ResourceType.MedicationStatement => MedicationStatement.fromJson(json),
    Stu3ResourceType.MessageDefinition => MessageDefinition.fromJson(json),
    Stu3ResourceType.MessageHeader => MessageHeader.fromJson(json),
    Stu3ResourceType.NamingSystem => NamingSystem.fromJson(json),
    Stu3ResourceType.NutritionOrder => NutritionOrder.fromJson(json),
    Stu3ResourceType.Observation => Observation.fromJson(json),
    Stu3ResourceType.OperationDefinition => OperationDefinition.fromJson(json),
    Stu3ResourceType.OperationOutcome => OperationOutcome.fromJson(json),
    Stu3ResourceType.Organization => Organization.fromJson(json),
    Stu3ResourceType.Parameters => Parameters.fromJson(json),
    Stu3ResourceType.Patient => Patient.fromJson(json),
    Stu3ResourceType.PaymentNotice => PaymentNotice.fromJson(json),
    Stu3ResourceType.PaymentReconciliation =>
      PaymentReconciliation.fromJson(json),
    Stu3ResourceType.Person => Person.fromJson(json),
    Stu3ResourceType.PlanDefinition => PlanDefinition.fromJson(json),
    Stu3ResourceType.Practitioner => Practitioner.fromJson(json),
    Stu3ResourceType.PractitionerRole => PractitionerRole.fromJson(json),
    Stu3ResourceType.Procedure => Procedure.fromJson(json),
    Stu3ResourceType.ProcedureRequest => ProcedureRequest.fromJson(json),
    Stu3ResourceType.ProcessRequest => ProcessRequest.fromJson(json),
    Stu3ResourceType.ProcessResponse => ProcessResponse.fromJson(json),
    Stu3ResourceType.Provenance => Provenance.fromJson(json),
    Stu3ResourceType.Questionnaire => Questionnaire.fromJson(json),
    Stu3ResourceType.QuestionnaireResponse =>
      QuestionnaireResponse.fromJson(json),
    Stu3ResourceType.ReferralRequest => ReferralRequest.fromJson(json),
    Stu3ResourceType.RelatedPerson => RelatedPerson.fromJson(json),
    Stu3ResourceType.RequestGroup => RequestGroup.fromJson(json),
    Stu3ResourceType.ResearchStudy => ResearchStudy.fromJson(json),
    Stu3ResourceType.ResearchSubject => ResearchSubject.fromJson(json),
    Stu3ResourceType.RiskAssessment => RiskAssessment.fromJson(json),
    Stu3ResourceType.Schedule => Schedule.fromJson(json),
    Stu3ResourceType.SearchParameter => SearchParameter.fromJson(json),
    Stu3ResourceType.Sequence => Sequence.fromJson(json),
    Stu3ResourceType.ServiceDefinition => ServiceDefinition.fromJson(json),
    Stu3ResourceType.Slot => Slot.fromJson(json),
    Stu3ResourceType.Specimen => Specimen.fromJson(json),
    Stu3ResourceType.StructureDefinition => StructureDefinition.fromJson(json),
    Stu3ResourceType.StructureMap => StructureMap.fromJson(json),
    Stu3ResourceType.Subscription => Subscription.fromJson(json),
    Stu3ResourceType.Substance => Substance.fromJson(json),
    Stu3ResourceType.SupplyDelivery => SupplyDelivery.fromJson(json),
    Stu3ResourceType.SupplyRequest => SupplyRequest.fromJson(json),
    Stu3ResourceType.Task => Task.fromJson(json),
    Stu3ResourceType.TestReport => TestReport.fromJson(json),
    Stu3ResourceType.TestScript => TestScript.fromJson(json),
    Stu3ResourceType.ValueSet => ValueSet.fromJson(json),
    Stu3ResourceType.VisionPrescription => VisionPrescription.fromJson(json),
    _ => throw UnsupportedError(
        "You have passed Resource.fromJson a type doesn't exist or is null. "
        'In this case, the resourceType is $resourceType.')
  };
}
