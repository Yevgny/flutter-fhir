create table if not exists internal.administrableproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  formOf jsonb[],
  administrableDoseForm jsonb,
  unitOfPresentation jsonb,
  producedFrom jsonb[],
  ingredient jsonb[],
  device jsonb,
  description text,
  _description jsonb,
  property AdministrableProductDefinitionProperty[],
  routeOfAdministration jsonb[] not null,
);

create table if not exists internal.clinicalusedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  type text,
  _type jsonb,
  category jsonb[],
  subject jsonb[],
  status jsonb,
  contraindication ClinicalUseDefinitionContraindication,
  indication ClinicalUseDefinitionIndication,
  interaction ClinicalUseDefinitionInteraction,
  population jsonb[],
  library_ text[],
  undesirableEffect ClinicalUseDefinitionUndesirableEffect,
  warning ClinicalUseDefinitionWarning,
);

create table if not exists internal.ingredient (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb,
  status text,
  _status jsonb,
  for_ jsonb[],
  role jsonb not null,
  function_ jsonb[],
  group jsonb,
  allergenicIndicator boolean,
  _allergenicIndicator jsonb,
  comment text,
  _comment jsonb,
  manufacturer IngredientManufacturer[],
  substance IngredientSubstance not null,
);

create table if not exists internal.manufactureditemdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  name text,
  _name jsonb,
  manufacturedDoseForm jsonb not null,
  unitOfPresentation jsonb,
  manufacturer jsonb[],
  marketingStatus MarketingStatus[],
  ingredient jsonb[],
  property ManufacturedItemDefinitionProperty[],
  component ManufacturedItemDefinitionComponent[],
);

create table if not exists internal.medicinalproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  type jsonb,
  domain jsonb,
  version text,
  _version jsonb,
  status jsonb,
  statusDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusDate jsonb,
  description text,
  _description jsonb,
  combinedPharmaceuticalDoseForm jsonb,
  route jsonb[],
  indication text,
  _indication jsonb,
  legalStatusOfSupply jsonb,
  additionalMonitoringIndicator jsonb,
  specialMeasures jsonb[],
  pediatricUseIndicator jsonb,
  classification jsonb[],
  marketingStatus MarketingStatus[],
  packagedMedicinalProduct jsonb[],
  comprisedOf jsonb[],
  ingredient jsonb[],
  impurity CodeableReference[],
  attachedDocument jsonb[],
  masterFile jsonb[],
  contact MedicinalProductDefinitionContact[],
  clinicalTrial jsonb[],
  code Coding[],
  name MedicinalProductDefinitionName[] not null,
  crossReference MedicinalProductDefinitionCrossReference[],
  operation MedicinalProductDefinitionOperation[],
  characteristic MedicinalProductDefinitionCharacteristic[],
);

create table if not exists internal.packagedproductdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  name text,
  _name jsonb,
  type jsonb,
  packageFor jsonb[],
  status jsonb,
  statusDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusDate jsonb,
  containedItemQuantity Quantity[],
  description text,
  _description jsonb,
  legalStatusOfSupply PackagedProductDefinitionLegalStatusOfSupply[],
  marketingStatus MarketingStatus[],
  copackagedIndicator boolean,
  _copackagedIndicator jsonb,
  manufacturer jsonb[],
  attachedDocument jsonb[],
  packaging PackagedProductDefinitionPackaging,
  characteristic PackagedProductDefinitionProperty[],
);

create table if not exists internal.regulatedauthorization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  subject jsonb[],
  type jsonb,
  description text,
  _description jsonb,
  region jsonb[],
  status jsonb,
  statusDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusDate jsonb,
  validityPeriod Period,
  indication CodeableReference[],
  intendedUse jsonb,
  basis jsonb[],
  holder jsonb,
  regulator jsonb,
  attachedDocument jsonb[],
  case_ RegulatedAuthorizationCase,
);

create table if not exists internal.substancedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  version text,
  _version jsonb,
  status jsonb,
  classification jsonb[],
  domain jsonb,
  grade jsonb[],
  description text,
  _description jsonb,
  informationSource jsonb[],
  note Annotation[],
  manufacturer jsonb[],
  supplier jsonb[],
  moiety SubstanceDefinitionMoiety[],
  characterization SubstanceDefinitionCharacterization[],
  property SubstanceDefinitionProperty[],
  referenceInformation jsonb,
  molecularWeight SubstanceDefinitionMolecularWeight[],
  structure SubstanceDefinitionStructure,
  code SubstanceDefinitionCode[],
  name SubstanceDefinitionName[],
  relationship SubstanceDefinitionRelationship[],
  nucleicAcid jsonb,
  polymer jsonb,
  protein jsonb,
  sourceMaterial SubstanceDefinitionSourceMaterial,
);

create table if not exists internal.substancenucleicacid (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  sequenceType jsonb,
  numberOfSubunits int,
  _numberOfSubunits jsonb,
  areaOfHybridisation text,
  _areaOfHybridisation jsonb,
  oligoNucleotideType jsonb,
  subunit SubstanceNucleicAcidSubunit[],
);

create table if not exists internal.substancepolymer (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb,
  class_ jsonb,
  geometry jsonb,
  copolymerConnectivity jsonb[],
  modification text,
  _modification jsonb,
  monomerSet SubstancePolymerMonomerSet[],
  repeat SubstancePolymerRepeat[],
);

create table if not exists internal.substanceprotein (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  sequenceType jsonb,
  numberOfSubunits int,
  _numberOfSubunits jsonb,
  disulfideLinkage text[],
  _disulfideLinkage jsonb,
  subunit SubstanceProteinSubunit[],
);

create table if not exists internal.substancereferenceinformation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  comment text,
  _comment jsonb,
  gene SubstanceReferenceInformationGene[],
  _gene jsonb,
  target SubstanceReferenceInformationTarget[],
);

create table if not exists internal.substancesourcematerial (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  sourceMaterialClass jsonb,
  sourceMaterialType jsonb,
  sourceMaterialState jsonb,
  organismId jsonb,
  organismName text,
  _organismName jsonb,
  parentSubstanceId jsonb[],
  parentSubstanceName text[],
  _parentSubstanceName jsonb,
  countryOfOrigin jsonb[],
  geographicalLocation text[],
  _geographicalLocation jsonb,
  developmentStage jsonb,
  fractionDescription SubstanceSourceMaterialFractionDescription[],
  organism SubstanceSourceMaterialOrganism,
  partDescription SubstanceSourceMaterialPartDescription[],
);

create table if not exists internal.artifactassessment (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  title text,
  _title jsonb,
  citeAsReference jsonb,
  citeAsMarkdown text,
  _citeAsMarkdown jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  copyright text,
  _copyright jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  artifactReference jsonb,
  artifactCanonical text,
  _artifactCanonical jsonb,
  artifactUri text,
  _artifactUri jsonb,
  content ArtifactAssessmentContent[],
  workflowStatus text,
  _workflowStatus jsonb,
  disposition text,
  _disposition jsonb,
);

create table if not exists internal.citation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  summary CitationSummary[],
  classification CitationClassification[],
  note Annotation[],
  currentState jsonb[],
  statusDate CitationStatusDate[],
  citedArtifact CitationCitedArtifact,
);

create table if not exists internal.evidence (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  citeAsReference jsonb,
  citeAsMarkdown text,
  _citeAsMarkdown jsonb,
  assertion text,
  _assertion jsonb,
  note Annotation[],
  variableDefinition EvidenceVariableDefinition[] not null,
  synthesisType jsonb,
  studyDesign jsonb[],
  statistic EvidenceStatistic[],
  certainty EvidenceCertainty[],
);

create table if not exists internal.evidencevariable (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  shortTitle text,
  _shortTitle jsonb,
  note Annotation[],
  actual boolean,
  _actual jsonb,
  characteristic EvidenceVariableCharacteristic[],
  handling text,
  _handling jsonb,
  category EvidenceVariableCategory[],
);

create table if not exists internal.evidencereport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  relatedIdentifier jsonb[],
  citeAsReference jsonb,
  citeAsMarkdown text,
  _citeAsMarkdown jsonb,
  type jsonb,
  note Annotation[],
  subject EvidenceReportSubject not null,
  relatesTo EvidenceReportRelatesTo[],
  section EvidenceReportSection[],
);

create table if not exists internal.activitydefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  subjectCanonical text,
  _subjectCanonical jsonb,
  usage text,
  _usage jsonb,
  library_ text[],
  kind text,
  _kind jsonb,
  profile text,
  code jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  timingTiming Timing,
  timingAge Age,
  timingRange Range,
  timingDuration text,
  asNeededBoolean boolean,
  _asNeededBoolean jsonb,
  asNeededCodeableConcept jsonb,
  location CodeableReference,
  participant ActivityDefinitionParticipant[],
  productReference jsonb,
  productCodeableConcept jsonb,
  quantity Quantity,
  dosage Dosage[],
  bodySite jsonb[],
  specimenRequirement text[],
  observationRequirement text[],
  observationResultRequirement text[],
  transform text,
  dynamicValue ActivityDefinitionDynamicValue[],
);

create table if not exists internal.actordefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  type text,
  _type jsonb,
  documentation text,
  _documentation jsonb,
  reference text[],
  _reference jsonb,
  capabilities text,
  derivedFrom text[],
);

create table if not exists internal.conditiondefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  code jsonb not null,
  severity jsonb,
  bodySite jsonb,
  stage jsonb,
  hasSeverity boolean,
  _hasSeverity jsonb,
  hasBodySite boolean,
  _hasBodySite jsonb,
  hasStage boolean,
  _hasStage jsonb,
  definition text[],
  _definition jsonb,
  observation ConditionDefinitionObservation[],
  medication ConditionDefinitionMedication[],
  precondition ConditionDefinitionPrecondition[],
  team jsonb[],
  questionnaire ConditionDefinitionQuestionnaire[],
  plan ConditionDefinitionPlan[],
);

create table if not exists internal.devicedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  description text,
  _description jsonb,
  identifier jsonb[],
  udiDeviceIdentifier DeviceDefinitionUdiDeviceIdentifier[],
  regulatoryIdentifier DeviceDefinitionRegulatoryIdentifier[],
  partNumber text,
  _partNumber jsonb,
  manufacturer jsonb,
  deviceName DeviceDefinitionDeviceName[],
  modelNumber text,
  _modelNumber jsonb,
  classification DeviceDefinitionClassification[],
  conformsTo DeviceDefinitionConformsTo[],
  hasPart DeviceDefinitionHasPart[],
  packaging DeviceDefinitionPackaging[],
  version DeviceDefinitionVersion[],
  safety jsonb[],
  shelfLifeStorage ProductShelfLife[],
  languageCode jsonb[],
  property DeviceDefinitionProperty[],
  owner jsonb,
  contact ContactPoint[],
  link DeviceDefinitionLink[],
  note Annotation[],
  material DeviceDefinitionMaterial[],
  productionIdentifierInUdi text[],
  _productionIdentifierInUdi jsonb,
  guideline DeviceDefinitionGuideline,
  correctiveAction DeviceDefinitionCorrectiveAction,
  chargeItem DeviceDefinitionChargeItem[],
);

create table if not exists internal.eventdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  usage text,
  _usage jsonb,
  trigger TriggerDefinition[] not null,
);

create table if not exists internal.examplescenario (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  actor ExampleScenarioActor[],
  instance ExampleScenarioInstance[],
  process ExampleScenarioProcess[],
);

create table if not exists internal.observationdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb,
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  derivedFromCanonical text[],
  derivedFromUri text[],
  _derivedFromUri jsonb,
  subject jsonb[],
  performerType jsonb,
  category jsonb[],
  code jsonb not null,
  permittedDataType text[],
  _permittedDataType jsonb,
  multipleResultsAllowed boolean,
  _multipleResultsAllowed jsonb,
  bodySite jsonb,
  method jsonb,
  specimen jsonb[],
  device jsonb[],
  preferredReportName text,
  _preferredReportName jsonb,
  permittedUnit Coding[],
  qualifiedValue ObservationDefinitionQualifiedValue[],
  hasMember jsonb[],
  component ObservationDefinitionComponent[],
);

create table if not exists internal.plandefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  type jsonb,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  subjectCanonical text,
  _subjectCanonical jsonb,
  usage text,
  _usage jsonb,
  library_ text[],
  goal PlanDefinitionGoal[],
  actor PlanDefinitionActor[],
  action PlanDefinitionAction[],
  asNeededBoolean boolean,
  _asNeededBoolean jsonb,
  asNeededCodeableConcept jsonb,
);

create table if not exists internal.questionnaire (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  derivedFrom text[],
  subjectType text[],
  _subjectType jsonb,
  code Coding[],
  item QuestionnaireItem[],
);

create table if not exists internal.requirements (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  derivedFrom text[],
  reference text[],
  _reference jsonb,
  actor text[],
  statement RequirementsStatement[],
);

create table if not exists internal.specimendefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb,
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  derivedFromCanonical text[],
  derivedFromUri text[],
  _derivedFromUri jsonb,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  typeCollected jsonb,
  patientPreparation jsonb[],
  timeAspect text,
  _timeAspect jsonb,
  collection jsonb[],
  typeTested SpecimenDefinitionTypeTested[],
);

create table if not exists internal.measure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  basis text,
  _basis jsonb,
  usage text,
  _usage jsonb,
  library_ text[],
  disclaimer text,
  _disclaimer jsonb,
  scoring jsonb,
  scoringUnit jsonb,
  compositeScoring jsonb,
  type jsonb[],
  riskAdjustment text,
  _riskAdjustment jsonb,
  rateAggregation text,
  _rateAggregation jsonb,
  rationale text,
  _rationale jsonb,
  clinicalRecommendationStatement text,
  _clinicalRecommendationStatement jsonb,
  improvementNotation jsonb,
  term MeasureTerm[],
  guidance text,
  _guidance jsonb,
  group MeasureGroup[],
  supplementalData MeasureSupplementalData[],
);

create table if not exists internal.measurereport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  type text,
  _type jsonb,
  dataUpdateType text,
  _dataUpdateType jsonb,
  measure text,
  subject jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  reporter jsonb,
  reportingVendor jsonb,
  location jsonb,
  period Period not null,
  inputParameters jsonb,
  scoring jsonb,
  improvementNotation jsonb,
  group MeasureReportGroup[],
  supplementalData jsonb[],
  evaluatedResource jsonb[],
);

create table if not exists internal.testplan (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  category jsonb[],
  scope jsonb[],
  testTools text,
  _testTools jsonb,
  dependency TestPlanDependency[],
  exitCriteria text,
  _exitCriteria jsonb,
  testCase TestPlanTestCase[],
);

create table if not exists internal.testreport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb,
  name text,
  _name jsonb,
  status text,
  _status jsonb,
  testScript text not null,
  result text,
  _result jsonb,
  score double,
  _score jsonb,
  tester text,
  _tester jsonb,
  issued timestamp with time zone default timezone('utc'::text, now()) not null,
  _issued jsonb,
  participant TestReportParticipant[],
  setup TestReportSetup,
  test TestReportTest[],
  teardown TestReportTeardown,
);

create table if not exists internal.testscript (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  origin TestScriptOrigin[],
  destination TestScriptDestination[],
  metadata TestScriptMetadata,
  scope TestScriptScope[],
  fixture TestScriptFixture[],
  profile text[],
  variable TestScriptVariable[],
  setup TestScriptSetup,
  test TestScriptTest[],
  teardown TestScriptTeardown,
);

create table if not exists internal.researchstudy (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  label ResearchStudyLabel[],
  protocol jsonb[],
  partOf jsonb[],
  relatedArtifact RelatedArtifact[],
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  status text,
  _status jsonb,
  primaryPurposeType jsonb,
  phase jsonb,
  studyDesign jsonb[],
  focus CodeableReference[],
  condition jsonb[],
  keyword jsonb[],
  region jsonb[],
  descriptionSummary text,
  _descriptionSummary jsonb,
  description text,
  _description jsonb,
  period Period,
  site jsonb[],
  note Annotation[],
  classifier jsonb[],
  associatedParty ResearchStudyAssociatedParty[],
  progressStatus ResearchStudyProgressStatus[],
  whyStopped jsonb,
  recruitment ResearchStudyRecruitment,
  comparisonGroup ResearchStudyComparisonGroup[],
  objective ResearchStudyObjective[],
  outcomeMeasure ResearchStudyOutcomeMeasure[],
  result jsonb[],
);

create table if not exists internal.researchsubject (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  progress ResearchSubjectProgress[],
  period Period,
  study jsonb not null,
  subject jsonb not null,
  assignedComparisonGroup text,
  _assignedComparisonGroup jsonb,
  actualComparisonGroup text,
  _actualComparisonGroup jsonb,
  consent jsonb[],
);

create table if not exists internal.auditevent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  category jsonb[],
  code jsonb not null,
  action text,
  _action jsonb,
  severity text,
  _severity jsonb,
  occurredPeriod Period,
  occurredDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurredDateTime jsonb,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  outcome AuditEventOutcome,
  authorization jsonb[],
  basedOn jsonb[],
  patient jsonb,
  encounter jsonb,
  agent AuditEventAgent[] not null,
  source AuditEventSource not null,
  entity AuditEventEntity[],
);

create table if not exists internal.consent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  subject jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  period Period,
  grantor jsonb[],
  grantee jsonb[],
  manager jsonb[],
  controller jsonb[],
  sourceAttachment Attachment[],
  sourceReference jsonb[],
  regulatoryBasis jsonb[],
  policyBasis ConsentPolicyBasis,
  policyText jsonb[],
  verification ConsentVerification[],
  decision text,
  _decision jsonb,
  provision ConsentProvision[],
);

create table if not exists internal.permission (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  status text,
  _status jsonb,
  asserter jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null[],
  _date jsonb,
  validity Period,
  justification PermissionJustification,
  combining text,
  _combining jsonb,
  rule PermissionRule[],
);

create table if not exists internal.provenance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  target jsonb[] not null,
  occurredPeriod Period,
  occurredDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurredDateTime jsonb,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  policy text[],
  _policy jsonb,
  location jsonb,
  authorization CodeableReference[],
  activity jsonb,
  basedOn jsonb[],
  patient jsonb,
  encounter jsonb,
  agent ProvenanceAgent[] not null,
  entity ProvenanceEntity[],
  signature Signature[],
);

create table if not exists internal.basic (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  code jsonb not null,
  subject jsonb,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  author jsonb,
);

create table if not exists internal.binary (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  contentType text,
  _contentType jsonb,
  securityContext jsonb,
  data text,
  _data jsonb,
);

create table if not exists internal.bundle (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  identifier jsonb,
  type text,
  _type jsonb,
  timestamp timestamp with time zone default timezone('utc'::text, now()) not null,
  _timestamp jsonb,
  total int,
  _total jsonb,
  link BundleLink[],
  entry BundleEntry[],
  signature Signature,
  issues jsonb,
);

create table if not exists internal.linkage (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  active boolean,
  _active jsonb,
  author jsonb,
  item LinkageItem[] not null,
);

create table if not exists internal.messageheader (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  eventCoding Coding,
  eventCanonical text,
  _eventCanonical jsonb,
  destination MessageHeaderDestination[],
  sender jsonb,
  author jsonb,
  source MessageHeaderSource not null,
  responsible jsonb,
  reason jsonb,
  response MessageHeaderResponse,
  focus jsonb[],
  definition text,
);

create table if not exists internal.operationoutcome (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  issue OperationOutcomeIssue[] not null,
);

create table if not exists internal.parameters (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  parameter ParametersParameter[],
);

create table if not exists internal.subscription (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  name text,
  _name jsonb,
  status text,
  _status jsonb,
  topic text not null,
  contact ContactPoint[],
  end timestamp with time zone default timezone('utc'::text, now()) not null,
  _end jsonb,
  managingEntity jsonb,
  reason text,
  _reason jsonb,
  filterBy SubscriptionFilterBy[],
  channelType Coding not null,
  endpoint text,
  _endpoint jsonb,
  parameter SubscriptionParameter[],
  heartbeatPeriod int,
  _heartbeatPeriod jsonb,
  timeout int,
  _timeout jsonb,
  contentType text,
  _contentType jsonb,
  content text,
  _content jsonb,
  maxCount int,
  _maxCount jsonb,
);

create table if not exists internal.subscriptionstatus (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  status text,
  _status jsonb,
  type text,
  _type jsonb,
  eventsSinceSubscriptionStart BigInt,
  _eventsSinceSubscriptionStart jsonb,
  notificationEvent SubscriptionStatusNotificationEvent[],
  subscription jsonb not null,
  topic text,
  error jsonb[],
);

create table if not exists internal.subscriptiontopic (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  derivedFrom text[],
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  resourceTrigger SubscriptionTopicResourceTrigger[],
  eventTrigger SubscriptionTopicEventTrigger[],
  canFilterBy SubscriptionTopicCanFilterBy[],
  notificationShape SubscriptionTopicNotificationShape[],
);

create table if not exists internal.codesystem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  caseSensitive boolean,
  _caseSensitive jsonb,
  valueSet text,
  hierarchyMeaning text,
  _hierarchyMeaning jsonb,
  compositional boolean,
  _compositional jsonb,
  versionNeeded boolean,
  _versionNeeded jsonb,
  content text,
  _content jsonb,
  supplements text,
  count_ int,
  _count jsonb,
  filter CodeSystemFilter[],
  property CodeSystemProperty[],
  concept CodeSystemConcept[],
);

create table if not exists internal.conceptmap (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  property ConceptMapProperty[],
  additionalAttribute ConceptMapAdditionalAttribute[],
  sourceScopeUri text,
  _sourceScopeUri jsonb,
  sourceScopeCanonical text,
  _sourceScopeCanonical jsonb,
  targetScopeUri text,
  _targetScopeUri jsonb,
  targetScopeCanonical text,
  _targetScopeCanonical jsonb,
  group ConceptMapGroup[],
);

create table if not exists internal.namingsystem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  kind text,
  _kind jsonb,
  responsible text,
  _responsible jsonb,
  type jsonb,
  usage text,
  _usage jsonb,
  uniqueId NamingSystemUniqueId[] not null,
);

create table if not exists internal.terminologycapabilities (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  kind text,
  _kind jsonb,
  software TerminologyCapabilitiesSoftware,
  implementation TerminologyCapabilitiesImplementation,
  lockedDate boolean,
  _lockedDate jsonb,
  codeSystem TerminologyCapabilitiesCodeSystem[],
  expansion TerminologyCapabilitiesExpansion,
  codeSearch text,
  _codeSearch jsonb,
  validateCode TerminologyCapabilitiesValidateCode,
  translation TerminologyCapabilitiesTranslation,
  closure TerminologyCapabilitiesClosure,
);

create table if not exists internal.valueset (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  immutable boolean,
  _immutable jsonb,
  compose ValueSetCompose,
  expansion ValueSetExpansion,
  scope ValueSetScope,
);

create table if not exists internal.capabilitystatement (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  kind text,
  _kind jsonb,
  instantiates text[],
  imports text[],
  software CapabilityStatementSoftware,
  implementation CapabilityStatementImplementation,
  fhirVersion text,
  _fhirVersion jsonb,
  format text[],
  _format jsonb,
  patchFormat text[],
  _patchFormat jsonb,
  acceptLanguage text[],
  _acceptLanguage jsonb,
  implementationGuide text[],
  rest CapabilityStatementRest[],
  messaging CapabilityStatementMessaging[],
  document CapabilityStatementDocument[],
);

create table if not exists internal.compartmentdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  code text,
  _code jsonb,
  search boolean,
  _search jsonb,
  resource CompartmentDefinitionResource[],
);

create table if not exists internal.graphdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  start text,
  _start jsonb,
  node GraphDefinitionNode[],
  link GraphDefinitionLink[],
);

create table if not exists internal.implementationguide (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  packageId text,
  _packageId jsonb,
  license text,
  _license jsonb,
  fhirVersion text[],
  _fhirVersion jsonb,
  dependsOn ImplementationGuideDependsOn[],
  global ImplementationGuideGlobal[],
  definition ImplementationGuideDefinition,
  manifest ImplementationGuideManifest,
);

create table if not exists internal.messagedefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  replaces text[],
  base text,
  parent text[],
  eventCoding Coding,
  eventUri text,
  _eventUri jsonb,
  category text,
  _category jsonb,
  focus MessageDefinitionFocus[],
  responseRequired text,
  _responseRequired jsonb,
  allowedResponse MessageDefinitionAllowedResponse[],
  graph text,
);

create table if not exists internal.operationdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  kind text,
  _kind jsonb,
  affectsState boolean,
  _affectsState jsonb,
  code text,
  _code jsonb,
  comment text,
  _comment jsonb,
  base text,
  resource text[],
  _resource jsonb,
  system boolean,
  _system jsonb,
  type boolean,
  _type jsonb,
  instance boolean,
  _instance jsonb,
  inputProfile text,
  outputProfile text,
  parameter OperationDefinitionParameter[],
  overload OperationDefinitionOverload[],
);

create table if not exists internal.searchparameter (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  derivedFrom text,
  code text,
  _code jsonb,
  base text[],
  _base jsonb,
  type text,
  _type jsonb,
  expression text,
  _expression jsonb,
  processingMode text,
  _processingMode jsonb,
  constraint text,
  _constraint jsonb,
  target text[],
  _target jsonb,
  multipleOr boolean,
  _multipleOr jsonb,
  multipleAnd boolean,
  _multipleAnd jsonb,
  comparator text[],
  _comparator jsonb,
  modifier text[],
  _modifier jsonb,
  chain text[],
  _chain jsonb,
  component SearchParameterComponent[],
);

create table if not exists internal.structuredefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  keyword Coding[],
  fhirVersion text,
  _fhirVersion jsonb,
  mapping StructureDefinitionMapping[],
  kind text,
  _kind jsonb,
  abstract_ boolean,
  _abstract jsonb,
  context StructureDefinitionContext[],
  contextInvariant text[],
  _contextInvariant jsonb,
  type text,
  _type jsonb,
  baseDefinition text,
  derivation text,
  _derivation jsonb,
  snapshot StructureDefinitionSnapshot,
  differential StructureDefinitionDifferential,
);

create table if not exists internal.structuremap (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  structure StructureMapStructure[],
  import_ text[],
  const_ StructureMapConst[],
  group StructureMapGroup[] not null,
);

create table if not exists internal.composition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  status text,
  _status jsonb,
  type jsonb not null,
  category jsonb[],
  subject jsonb[],
  encounter jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  useContext UsageContext[],
  author jsonb[] not null,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  note Annotation[],
  attester CompositionAttester[],
  custodian jsonb,
  relatesTo RelatedArtifact[],
  event CompositionEvent[],
  section CompositionSection[],
);

create table if not exists internal.documentreference (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  version text,
  _version jsonb,
  basedOn jsonb[],
  status text,
  _status jsonb,
  docStatus text,
  _docStatus jsonb,
  modality jsonb[],
  type jsonb,
  category jsonb[],
  subject jsonb,
  context jsonb[],
  event CodeableReference[],
  bodySite CodeableReference[],
  facilityType jsonb,
  practiceSetting jsonb,
  period Period,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  author jsonb[],
  attester DocumentReferenceAttester[],
  custodian jsonb,
  relatesTo DocumentReferenceRelatesTo[],
  description text,
  _description jsonb,
  securityLabel jsonb[],
  content DocumentReferenceContent[] not null,
);

create table if not exists internal.appointment (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  cancellationReason jsonb,
  class_ jsonb[],
  serviceCategory jsonb[],
  serviceType CodeableReference[],
  specialty jsonb[],
  appointmentType jsonb,
  reason CodeableReference[],
  priority jsonb,
  description text,
  _description jsonb,
  replaces jsonb[],
  virtualService VirtualServiceDetail[],
  supportingInformation jsonb[],
  previousAppointment jsonb,
  originatingAppointment jsonb,
  start timestamp with time zone default timezone('utc'::text, now()) not null,
  _start jsonb,
  end timestamp with time zone default timezone('utc'::text, now()) not null,
  _end jsonb,
  minutesDuration int,
  _minutesDuration jsonb,
  requestedPeriod Period[],
  slot jsonb[],
  account jsonb[],
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  cancellationDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _cancellationDate jsonb,
  note Annotation[],
  patientInstruction CodeableReference[],
  basedOn jsonb[],
  subject jsonb,
  participant AppointmentParticipant[] not null,
  recurrenceId int,
  _recurrenceId jsonb,
  occurrenceChanged boolean,
  _occurrenceChanged jsonb,
  recurrenceTemplate AppointmentRecurrenceTemplate[],
);

create table if not exists internal.appointmentresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  appointment jsonb not null,
  proposedNewTime boolean,
  _proposedNewTime jsonb,
  start timestamp with time zone default timezone('utc'::text, now()) not null,
  _start jsonb,
  end timestamp with time zone default timezone('utc'::text, now()) not null,
  _end jsonb,
  participantType jsonb[],
  actor jsonb,
  participantStatus text,
  _participantStatus jsonb,
  comment text,
  _comment jsonb,
  recurring boolean,
  _recurring jsonb,
  occurrenceDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDate jsonb,
  recurrenceId int,
  _recurrenceId jsonb,
);

create table if not exists internal.schedule (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  serviceCategory jsonb[],
  serviceType CodeableReference[],
  specialty jsonb[],
  name text,
  _name jsonb,
  actor jsonb[] not null,
  planningHorizon Period,
  comment text,
  _comment jsonb,
);

create table if not exists internal.slot (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  serviceCategory jsonb[],
  serviceType CodeableReference[],
  specialty jsonb[],
  appointmentType jsonb[],
  schedule jsonb not null,
  status text,
  _status jsonb,
  start timestamp with time zone default timezone('utc'::text, now()) not null,
  _start jsonb,
  end timestamp with time zone default timezone('utc'::text, now()) not null,
  _end jsonb,
  overbooked boolean,
  _overbooked jsonb,
  comment text,
  _comment jsonb,
);

create table if not exists internal.task (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text,
  instantiatesUri text,
  _instantiatesUri jsonb,
  basedOn jsonb[],
  groupIdentifier jsonb,
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason CodeableReference,
  businessStatus jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  code jsonb,
  description text,
  _description jsonb,
  focus jsonb,
  for_ jsonb,
  encounter jsonb,
  requestedPeriod Period,
  executionPeriod Period,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  lastModified timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastModified jsonb,
  requester jsonb,
  requestedPerformer CodeableReference[],
  owner jsonb,
  performer TaskPerformer[],
  location jsonb,
  reason CodeableReference[],
  insurance jsonb[],
  note Annotation[],
  relevantHistory jsonb[],
  restriction TaskRestriction,
  input TaskInput[],
  output TaskOutput[],
);

create table if not exists internal.transport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text,
  instantiatesUri text,
  _instantiatesUri jsonb,
  basedOn jsonb[],
  groupIdentifier jsonb,
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  code jsonb,
  description text,
  _description jsonb,
  focus jsonb,
  for_ jsonb,
  encounter jsonb,
  completionTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _completionTime jsonb,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  lastModified timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastModified jsonb,
  requester jsonb,
  performerType jsonb[],
  owner jsonb,
  location jsonb,
  insurance jsonb[],
  note Annotation[],
  relevantHistory jsonb[],
  restriction TransportRestriction,
  input TransportInput[],
  output TransportOutput[],
  requestedLocation jsonb not null,
  currentLocation jsonb not null,
  reason CodeableReference,
  history jsonb,
);

create table if not exists internal.verificationresult (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  target jsonb[],
  targetLocation text[],
  _targetLocation jsonb,
  need jsonb,
  status text,
  _status jsonb,
  statusDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusDate jsonb,
  validationType jsonb,
  validationProcess jsonb[],
  frequency Timing,
  lastPerformed timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastPerformed jsonb,
  nextScheduled timestamp with time zone default timezone('utc'::text, now()) not null,
  _nextScheduled jsonb,
  failureAction jsonb,
  primarySource VerificationResultPrimarySource[],
  attestation VerificationResultAttestation,
  validator VerificationResultValidator[],
);

create table if not exists internal.group (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  type text,
  _type jsonb,
  membership text,
  _membership jsonb,
  code jsonb,
  name text,
  _name jsonb,
  description text,
  _description jsonb,
  quantity int,
  _quantity jsonb,
  managingEntity jsonb,
  characteristic GroupCharacteristic[],
  member GroupMember[],
);

create table if not exists internal.patient (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  name HumanName[],
  telecom ContactPoint[],
  gender text,
  _gender jsonb,
  birthDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _birthDate jsonb,
  deceasedBoolean boolean,
  _deceasedBoolean jsonb,
  deceasedDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _deceasedDateTime jsonb,
  address Address[],
  maritalStatus jsonb,
  multipleBirthBoolean boolean,
  _multipleBirthBoolean jsonb,
  multipleBirthInteger int,
  _multipleBirthInteger jsonb,
  photo Attachment[],
  contact PatientContact[],
  communication PatientCommunication[],
  generalPractitioner jsonb[],
  managingOrganization jsonb,
  link PatientLink[],
);

create table if not exists internal.person (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  name HumanName[],
  telecom ContactPoint[],
  gender text,
  _gender jsonb,
  birthDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _birthDate jsonb,
  deceasedBoolean boolean,
  _deceasedBoolean jsonb,
  deceasedDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _deceasedDateTime jsonb,
  address Address[],
  maritalStatus jsonb,
  photo Attachment[],
  communication PersonCommunication[],
  managingOrganization jsonb,
  link PersonLink[],
);

create table if not exists internal.practitioner (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  name HumanName[],
  telecom ContactPoint[],
  gender text,
  _gender jsonb,
  birthDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _birthDate jsonb,
  deceasedBoolean boolean,
  _deceasedBoolean jsonb,
  deceasedDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _deceasedDateTime jsonb,
  address Address[],
  photo Attachment[],
  qualification PractitionerQualification[],
  communication PractitionerCommunication[],
);

create table if not exists internal.practitionerrole (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  period Period,
  practitioner jsonb,
  organization jsonb,
  code jsonb[],
  specialty jsonb[],
  location jsonb[],
  healthcareService jsonb[],
  contact ExtendedContactDetail[],
  characteristic jsonb[],
  communication jsonb[],
  availability Availability[],
  endpoint jsonb[],
);

create table if not exists internal.relatedperson (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  patient jsonb not null,
  relationship jsonb[],
  name HumanName[],
  telecom ContactPoint[],
  gender text,
  _gender jsonb,
  birthDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _birthDate jsonb,
  address Address[],
  photo Attachment[],
  period Period,
  communication RelatedPersonCommunication[],
);

create table if not exists internal.healthcareservice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  providedBy jsonb,
  offeredIn jsonb[],
  category jsonb[],
  type jsonb[],
  specialty jsonb[],
  location jsonb[],
  name text,
  _name jsonb,
  comment text,
  _comment jsonb,
  extraDetails text,
  _extraDetails jsonb,
  photo Attachment,
  contact ExtendedContactDetail[],
  coverageArea jsonb[],
  serviceProvisionCode jsonb[],
  eligibility HealthcareServiceEligibility[],
  program jsonb[],
  characteristic jsonb[],
  communication jsonb[],
  referralMethod jsonb[],
  appointmentRequired boolean,
  _appointmentRequired jsonb,
  availability Availability[],
  endpoint jsonb[],
);

create table if not exists internal.location (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  operationalStatus Coding,
  name text,
  _name jsonb,
  alias text[],
  _alias jsonb,
  description text,
  _description jsonb,
  mode text,
  _mode jsonb,
  type jsonb[],
  contact ExtendedContactDetail[],
  address Address,
  form jsonb,
  position LocationPosition,
  managingOrganization jsonb,
  partOf jsonb,
  characteristic jsonb[],
  hoursOfOperation Availability[],
  virtualService VirtualServiceDetail[],
  endpoint jsonb[],
);

create table if not exists internal.organization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  type jsonb[],
  name text,
  _name jsonb,
  alias text[],
  _alias jsonb,
  description text,
  _description jsonb,
  contact ExtendedContactDetail[],
  partOf jsonb,
  endpoint jsonb[],
  qualification OrganizationQualification[],
);

create table if not exists internal.organizationaffiliation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  period Period,
  organization jsonb,
  participatingOrganization jsonb,
  network jsonb[],
  code jsonb[],
  specialty jsonb[],
  location jsonb[],
  healthcareService jsonb[],
  contact ExtendedContactDetail[],
  endpoint jsonb[],
);

create table if not exists internal.encounter (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  class_ jsonb[],
  priority jsonb,
  type jsonb[],
  serviceType CodeableReference[],
  subject jsonb,
  subjectStatus jsonb,
  episodeOfCare jsonb[],
  basedOn jsonb[],
  careTeam jsonb[],
  partOf jsonb,
  serviceProvider jsonb,
  participant EncounterParticipant[],
  appointment jsonb[],
  virtualService VirtualServiceDetail[],
  actualPeriod Period,
  plannedStartDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _plannedStartDate jsonb,
  plannedEndDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _plannedEndDate jsonb,
  length text,
  reason EncounterReason[],
  diagnosis EncounterDiagnosis[],
  account jsonb[],
  dietPreference jsonb[],
  specialArrangement jsonb[],
  specialCourtesy jsonb[],
  admission EncounterAdmission,
  location EncounterLocation[],
);

create table if not exists internal.encounterhistory (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  encounter jsonb,
  identifier jsonb[],
  status text,
  _status jsonb,
  class_ jsonb not null,
  type jsonb[],
  serviceType CodeableReference[],
  subject jsonb,
  subjectStatus jsonb,
  actualPeriod Period,
  plannedStartDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _plannedStartDate jsonb,
  plannedEndDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _plannedEndDate jsonb,
  length text,
  location EncounterHistoryLocation[],
);

create table if not exists internal.episodeofcare (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  statusHistory EpisodeOfCareStatusHistory[],
  type jsonb[],
  reason EpisodeOfCareReason[],
  diagnosis EpisodeOfCareDiagnosis[],
  patient jsonb not null,
  managingOrganization jsonb,
  period Period,
  referralRequest jsonb[],
  careManager jsonb,
  careTeam jsonb[],
  account jsonb[],
);

create table if not exists internal.flag (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  code jsonb not null,
  subject jsonb not null,
  period Period,
  encounter jsonb,
  author jsonb,
);

create table if not exists internal.library (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  subtitle text,
  _subtitle jsonb,
  type jsonb not null,
  subjectCodeableConcept jsonb,
  subjectReference jsonb,
  usage text,
  _usage jsonb,
  parameter ParameterDefinition[],
  dataRequirement DataRequirement[],
  content Attachment[],
);

create table if not exists internal.biologicallyderivedproduct (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  productCategory Coding,
  productCode jsonb,
  parent jsonb[],
  request jsonb[],
  identifier jsonb[],
  biologicalSourceEvent jsonb,
  processingFacility jsonb[],
  division text,
  _division jsonb,
  productStatus Coding,
  expirationDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _expirationDate jsonb,
  collection BiologicallyDerivedProductCollection,
  storageTempRequirements Range,
  property BiologicallyDerivedProductProperty[],
);

create table if not exists internal.biologicallyderivedproductdispense (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  originRelationshipType jsonb,
  product jsonb not null,
  patient jsonb not null,
  matchStatus jsonb,
  performer BiologicallyDerivedProductDispensePerformer[],
  location jsonb,
  quantity Quantity,
  preparedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _preparedDate jsonb,
  whenHandedOver timestamp with time zone default timezone('utc'::text, now()) not null,
  _whenHandedOver jsonb,
  destination jsonb,
  note Annotation[],
  usageInstruction text,
  _usageInstruction jsonb,
);

create table if not exists internal.device (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  displayName text,
  _displayName jsonb,
  definition CodeableReference,
  udiCarrier DeviceUdiCarrier[],
  status text,
  _status jsonb,
  availabilityStatus jsonb,
  biologicalSourceEvent jsonb,
  manufacturer text,
  _manufacturer jsonb,
  manufactureDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _manufactureDate jsonb,
  expirationDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _expirationDate jsonb,
  lotNumber text,
  _lotNumber jsonb,
  serialNumber text,
  _serialNumber jsonb,
  name DeviceName[],
  modelNumber text,
  _modelNumber jsonb,
  partNumber text,
  _partNumber jsonb,
  category jsonb[],
  type jsonb[],
  version DeviceVersion[],
  conformsTo DeviceConformsTo[],
  property DeviceProperty[],
  mode jsonb,
  cycle Count,
  duration text,
  owner jsonb,
  contact ContactPoint[],
  location jsonb,
  url text,
  _url jsonb,
  endpoint jsonb[],
  gateway CodeableReference[],
  note Annotation[],
  safety jsonb[],
  parent jsonb,
);

create table if not exists internal.devicemetric (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  type jsonb not null,
  unit jsonb,
  device jsonb not null,
  operationalStatus text,
  _operationalStatus jsonb,
  color text,
  _color jsonb,
  category text,
  _category jsonb,
  measurementFrequency Quantity,
  calibration DeviceMetricCalibration[],
);

create table if not exists internal.nutritionproduct (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  code jsonb,
  status text,
  _status jsonb,
  category jsonb[],
  manufacturer jsonb[],
  nutrient NutritionProductNutrient[],
  ingredient NutritionProductIngredient[],
  knownAllergen CodeableReference[],
  characteristic NutritionProductCharacteristic[],
  instance NutritionProductInstance[],
  note Annotation[],
);

create table if not exists internal.substance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instance boolean,
  _instance jsonb,
  status text,
  _status jsonb,
  category jsonb[],
  code CodeableReference not null,
  description text,
  _description jsonb,
  expiry timestamp with time zone default timezone('utc'::text, now()) not null,
  _expiry jsonb,
  quantity Quantity,
  ingredient SubstanceIngredient[],
);

create table if not exists internal.coverage (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  kind text,
  _kind jsonb,
  paymentBy CoveragePaymentBy[],
  type jsonb,
  policyHolder jsonb,
  subscriber jsonb,
  subscriberId jsonb[],
  beneficiary jsonb not null,
  dependent text,
  _dependent jsonb,
  relationship jsonb,
  period Period,
  insurer jsonb,
  class_ CoverageClass[],
  order int,
  _order jsonb,
  network text,
  _network jsonb,
  costToBeneficiary CoverageCostToBeneficiary[],
  subrogation boolean,
  _subrogation jsonb,
  contract jsonb[],
  insurancePlan jsonb,
);

create table if not exists internal.coverageeligibilityrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  priority jsonb,
  purpose text[],
  _purpose jsonb,
  patient jsonb not null,
  event CoverageEligibilityRequestEvent[],
  servicedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _servicedDate jsonb,
  servicedPeriod Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  enterer jsonb,
  provider jsonb,
  insurer jsonb not null,
  facility jsonb,
  supportingInfo CoverageEligibilityRequestSupportingInfo[],
  insurance CoverageEligibilityRequestInsurance[],
  item CoverageEligibilityRequestItem[],
);

create table if not exists internal.coverageeligibilityresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  purpose text[],
  _purpose jsonb,
  patient jsonb not null,
  event CoverageEligibilityResponseEvent[],
  servicedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _servicedDate jsonb,
  servicedPeriod Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  requestor jsonb,
  request jsonb not null,
  outcome text,
  _outcome jsonb,
  disposition text,
  _disposition jsonb,
  insurer jsonb not null,
  insurance CoverageEligibilityResponseInsurance[],
  preAuthRef text,
  _preAuthRef jsonb,
  form jsonb,
  error CoverageEligibilityResponseError[],
);

create table if not exists internal.enrollmentrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  insurer jsonb,
  provider jsonb,
  candidate jsonb,
  coverage jsonb,
);

create table if not exists internal.enrollmentresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  request jsonb,
  outcome text,
  _outcome jsonb,
  disposition text,
  _disposition jsonb,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  organization jsonb,
  requestProvider jsonb,
);

create table if not exists internal.claim (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  traceNumber jsonb[],
  status text,
  _status jsonb,
  type jsonb not null,
  subType jsonb,
  use text,
  _use jsonb,
  patient jsonb not null,
  billablePeriod Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  enterer jsonb,
  insurer jsonb,
  provider jsonb,
  priority jsonb,
  fundsReserve jsonb,
  related ClaimRelated[],
  prescription jsonb,
  originalPrescription jsonb,
  payee ClaimPayee,
  referral jsonb,
  encounter jsonb[],
  facility jsonb,
  diagnosisRelatedGroup jsonb,
  event ClaimEvent[],
  careTeam ClaimCareTeam[],
  supportingInfo ClaimSupportingInfo[],
  diagnosis ClaimDiagnosis[],
  procedure ClaimProcedure[],
  insurance ClaimInsurance[],
  accident ClaimAccident,
  patientPaid Money,
  item ClaimItem[],
  total Money,
);

create table if not exists internal.claimresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  traceNumber jsonb[],
  status text,
  _status jsonb,
  type jsonb not null,
  subType jsonb,
  use text,
  _use jsonb,
  patient jsonb not null,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  insurer jsonb,
  requestor jsonb,
  request jsonb,
  outcome text,
  _outcome jsonb,
  decision jsonb,
  disposition text,
  _disposition jsonb,
  preAuthRef text,
  _preAuthRef jsonb,
  preAuthPeriod Period,
  event ClaimResponseEvent[],
  payeeType jsonb,
  encounter jsonb[],
  diagnosisRelatedGroup jsonb,
  item ClaimResponseItem[],
  addItem ClaimResponseAddItem[],
  adjudication ClaimResponseAdjudication[],
  total ClaimResponseTotal[],
  payment ClaimResponsePayment,
  fundsReserve jsonb,
  formCode jsonb,
  form Attachment,
  processNote ClaimResponseProcessNote[],
  communicationRequest jsonb[],
  insurance ClaimResponseInsurance[],
  error ClaimResponseError[],
);

create table if not exists internal.invoice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  cancelledReason text,
  _cancelledReason jsonb,
  type jsonb,
  subject jsonb,
  recipient jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  creation timestamp with time zone default timezone('utc'::text, now()) not null,
  _creation jsonb,
  periodDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _periodDate jsonb,
  periodPeriod Period,
  participant InvoiceParticipant[],
  issuer jsonb,
  account jsonb,
  lineItem InvoiceLineItem[],
  totalPriceComponent MonetaryComponent[],
  totalNet Money,
  totalGross Money,
  paymentTerms text,
  _paymentTerms jsonb,
  note Annotation[],
);

create table if not exists internal.paymentnotice (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  request jsonb,
  response jsonb,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  reporter jsonb,
  payment jsonb,
  paymentDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _paymentDate jsonb,
  payee jsonb,
  recipient jsonb not null,
  amount Money not null,
  paymentStatus jsonb,
);

create table if not exists internal.paymentreconciliation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  type jsonb not null,
  status text,
  _status jsonb,
  kind jsonb,
  period Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  enterer jsonb,
  issuerType jsonb,
  paymentIssuer jsonb,
  request jsonb,
  requestor jsonb,
  outcome text,
  _outcome jsonb,
  disposition text,
  _disposition jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  location jsonb,
  method jsonb,
  cardBrand text,
  _cardBrand jsonb,
  accountNumber text,
  _accountNumber jsonb,
  expirationDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _expirationDate jsonb,
  processor text,
  _processor jsonb,
  referenceNumber text,
  _referenceNumber jsonb,
  authorization text,
  _authorization jsonb,
  tenderedAmount Money,
  returnedAmount Money,
  amount Money not null,
  paymentIdentifier jsonb,
  allocation PaymentReconciliationAllocation[],
  formCode jsonb,
  processNote PaymentReconciliationProcessNote[],
);

create table if not exists internal.account (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  billingStatus jsonb,
  type jsonb,
  name text,
  _name jsonb,
  subject jsonb[],
  servicePeriod Period,
  coverage AccountCoverage[],
  owner jsonb,
  description text,
  _description jsonb,
  guarantor AccountGuarantor[],
  diagnosis AccountDiagnosis[],
  procedure AccountProcedure[],
  relatedAccount AccountRelatedAccount[],
  currency jsonb,
  balance AccountBalance[],
  calculatedAt timestamp with time zone default timezone('utc'::text, now()) not null,
  _calculatedAt jsonb,
);

create table if not exists internal.chargeitem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  definitionUri text[],
  _definitionUri jsonb,
  definitionCanonical text[],
  status text,
  _status jsonb,
  partOf jsonb[],
  code jsonb not null,
  subject jsonb not null,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  performer ChargeItemPerformer[],
  performingOrganization jsonb,
  requestingOrganization jsonb,
  costCenter jsonb,
  quantity Quantity,
  bodysite jsonb[],
  unitPriceComponent MonetaryComponent,
  totalPriceComponent MonetaryComponent,
  overrideReason jsonb,
  enterer jsonb,
  enteredDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _enteredDate jsonb,
  reason jsonb[],
  service CodeableReference[],
  product CodeableReference[],
  account jsonb[],
  note Annotation[],
  supportingInformation jsonb[],
);

create table if not exists internal.chargeitemdefinition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author ContactDetail[],
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  derivedFromUri text[],
  _derivedFromUri jsonb,
  partOf text[],
  replaces text[],
  code jsonb,
  instance jsonb[],
  applicability ChargeItemDefinitionApplicability[],
  propertyGroup ChargeItemDefinitionPropertyGroup[],
);

create table if not exists internal.contract (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  url text,
  _url jsonb,
  version text,
  _version jsonb,
  status text,
  _status jsonb,
  legalState jsonb,
  instantiatesCanonical jsonb,
  instantiatesUri text,
  _instantiatesUri jsonb,
  contentDerivative jsonb,
  issued timestamp with time zone default timezone('utc'::text, now()) not null,
  _issued jsonb,
  applies Period,
  expirationType jsonb,
  subject jsonb[],
  authority jsonb[],
  domain jsonb[],
  site jsonb[],
  name text,
  _name jsonb,
  title text,
  _title jsonb,
  subtitle text,
  _subtitle jsonb,
  alias text[],
  _alias jsonb,
  author jsonb,
  scope jsonb,
  topicCodeableConcept jsonb,
  topicReference jsonb,
  type jsonb,
  subType jsonb[],
  contentDefinition ContractContentDefinition,
  term ContractTerm[],
  supportingInfo jsonb[],
  relevantHistory jsonb[],
  signer ContractSigner[],
  friendly ContractFriendly[],
  legal ContractLegal[],
  rule ContractRule[],
  legallyBindingAttachment Attachment,
  legallyBindingReference jsonb,
);

create table if not exists internal.explanationofbenefit (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  traceNumber jsonb[],
  status text,
  _status jsonb,
  type jsonb not null,
  subType jsonb,
  use text,
  _use jsonb,
  patient jsonb not null,
  billablePeriod Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  enterer jsonb,
  insurer jsonb,
  provider jsonb,
  priority jsonb,
  fundsReserveRequested jsonb,
  fundsReserve jsonb,
  related ExplanationOfBenefitRelated[],
  prescription jsonb,
  originalPrescription jsonb,
  event ExplanationOfBenefitEvent[],
  payee ExplanationOfBenefitPayee,
  referral jsonb,
  encounter jsonb[],
  facility jsonb,
  claim jsonb,
  claimResponse jsonb,
  outcome text,
  _outcome jsonb,
  decision jsonb,
  disposition text,
  _disposition jsonb,
  preAuthRef text[],
  _preAuthRef jsonb,
  preAuthRefPeriod Period[],
  diagnosisRelatedGroup jsonb,
  careTeam ExplanationOfBenefitCareTeam[],
  supportingInfo ExplanationOfBenefitSupportingInfo[],
  diagnosis ExplanationOfBenefitDiagnosis[],
  procedure ExplanationOfBenefitProcedure[],
  precedence int,
  _precedence jsonb,
  insurance ExplanationOfBenefitInsurance[],
  accident ExplanationOfBenefitAccident,
  patientPaid Money,
  item ExplanationOfBenefitItem[],
  addItem ExplanationOfBenefitAddItem[],
  adjudication ExplanationOfBenefitAdjudication[],
  total ExplanationOfBenefitTotal[],
  payment ExplanationOfBenefitPayment,
  formCode jsonb,
  form Attachment,
  processNote ExplanationOfBenefitProcessNote[],
  benefitPeriod Period,
  benefitBalance ExplanationOfBenefitBenefitBalance[],
);

create table if not exists internal.insuranceplan (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  type jsonb[],
  name text,
  _name jsonb,
  alias text[],
  _alias jsonb,
  period Period,
  ownedBy jsonb,
  administeredBy jsonb,
  coverageArea jsonb[],
  contact ExtendedContactDetail[],
  endpoint jsonb[],
  network jsonb[],
  coverage InsurancePlanCoverage[],
  plan InsurancePlanPlan[],
);

create table if not exists internal.communication (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  partOf jsonb[],
  inResponseTo jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb,
  category jsonb[],
  priority text,
  _priority jsonb,
  medium jsonb[],
  subject jsonb,
  topic jsonb,
  about jsonb[],
  encounter jsonb,
  sent timestamp with time zone default timezone('utc'::text, now()) not null,
  _sent jsonb,
  received timestamp with time zone default timezone('utc'::text, now()) not null,
  _received jsonb,
  recipient jsonb[],
  sender jsonb,
  reason CodeableReference[],
  payload CommunicationPayload[],
  note Annotation[],
);

create table if not exists internal.communicationrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  replaces jsonb[],
  groupIdentifier jsonb,
  status text,
  _status jsonb,
  statusReason jsonb,
  intent text,
  _intent jsonb,
  category jsonb[],
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  medium jsonb[],
  subject jsonb,
  about jsonb[],
  encounter jsonb,
  payload CommunicationRequestPayload[],
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  requester jsonb,
  recipient jsonb[],
  informationProvider jsonb[],
  reason CodeableReference[],
  note Annotation[],
);

create table if not exists internal.deviceassociation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  device jsonb not null,
  category jsonb[],
  status jsonb not null,
  statusReason jsonb[],
  subject jsonb,
  bodyStructure jsonb,
  period Period,
  operation DeviceAssociationOperation[],
);

create table if not exists internal.devicedispense (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason CodeableReference,
  category jsonb[],
  device CodeableReference not null,
  subject jsonb not null,
  receiver jsonb,
  encounter jsonb,
  supportingInformation jsonb[],
  performer DeviceDispensePerformer[],
  location jsonb,
  type jsonb,
  quantity Quantity,
  preparedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _preparedDate jsonb,
  whenHandedOver timestamp with time zone default timezone('utc'::text, now()) not null,
  _whenHandedOver jsonb,
  destination jsonb,
  note Annotation[],
  usageInstruction text,
  _usageInstruction jsonb,
  eventHistory jsonb[],
);

create table if not exists internal.devicerequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  replaces jsonb[],
  groupIdentifier jsonb,
  status text,
  _status jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  code CodeableReference not null,
  quantity int,
  _quantity jsonb,
  parameter DeviceRequestParameter[],
  subject jsonb not null,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  requester jsonb,
  performer CodeableReference,
  reason CodeableReference[],
  asNeeded boolean,
  _asNeeded jsonb,
  asNeededFor jsonb,
  insurance jsonb[],
  supportingInfo jsonb[],
  note Annotation[],
  relevantHistory jsonb[],
);

create table if not exists internal.deviceusage (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  patient jsonb not null,
  derivedFrom jsonb[],
  context jsonb,
  timingTiming Timing,
  timingPeriod Period,
  timingDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _timingDateTime jsonb,
  dateAsserted timestamp with time zone default timezone('utc'::text, now()) not null,
  _dateAsserted jsonb,
  usageStatus jsonb,
  usageReason jsonb[],
  adherence DeviceUsageAdherence,
  informationSource jsonb,
  device CodeableReference not null,
  reason CodeableReference[],
  bodySite CodeableReference,
  note Annotation[],
);

create table if not exists internal.guidanceresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  requestIdentifier jsonb,
  identifier jsonb[],
  moduleUri text,
  _moduleUri jsonb,
  moduleCanonical text,
  _moduleCanonical jsonb,
  moduleCodeableConcept jsonb,
  status text,
  _status jsonb,
  subject jsonb,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  performer jsonb,
  reason CodeableReference[],
  note Annotation[],
  evaluationMessage jsonb,
  outputParameters jsonb,
  result jsonb[],
  dataRequirement DataRequirement[],
);

create table if not exists internal.inventoryitem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  code jsonb[],
  name InventoryItemName[],
  responsibleOrganization InventoryItemResponsibleOrganization[],
  description InventoryItemDescription,
  inventoryStatus jsonb[],
  baseUnit jsonb,
  netContent Quantity,
  association InventoryItemAssociation[],
  characteristic InventoryItemCharacteristic[],
  instance InventoryItemInstance,
  productReference jsonb,
);

create table if not exists internal.inventoryreport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  countType text,
  _countType jsonb,
  operationType jsonb,
  operationTypeReason jsonb,
  reportedDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _reportedDateTime jsonb,
  reporter jsonb,
  reportingPeriod Period,
  inventoryListing InventoryReportInventoryListing[],
  note Annotation[],
);

create table if not exists internal.supplydelivery (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  patient jsonb,
  type jsonb,
  suppliedItem SupplyDeliverySuppliedItem[],
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  supplier jsonb,
  destination jsonb,
  receiver jsonb[],
);

create table if not exists internal.supplyrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  basedOn jsonb[],
  category jsonb,
  priority text,
  _priority jsonb,
  deliverFor jsonb,
  item CodeableReference not null,
  quantity Quantity not null,
  parameter SupplyRequestParameter[],
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  requester jsonb,
  supplier jsonb[],
  reason CodeableReference[],
  deliverFrom jsonb,
  deliverTo jsonb,
);

create table if not exists internal.bodystructure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  active boolean,
  _active jsonb,
  morphology jsonb,
  includedStructure BodyStructureIncludedStructure[] not null,
  excludedStructure BodyStructureIncludedStructure[],
  description text,
  _description jsonb,
  image Attachment[],
  patient jsonb not null,
);

create table if not exists internal.diagnosticreport (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  code jsonb not null,
  subject jsonb,
  encounter jsonb,
  effectiveDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _effectiveDateTime jsonb,
  effectivePeriod Period,
  issued timestamp with time zone default timezone('utc'::text, now()) not null,
  _issued jsonb,
  performer jsonb[],
  resultsInterpreter jsonb[],
  specimen jsonb[],
  result jsonb[],
  note Annotation[],
  study jsonb[],
  supportingInfo DiagnosticReportSupportingInfo[],
  media DiagnosticReportMedia[],
  composition jsonb,
  conclusion text,
  _conclusion jsonb,
  conclusionCode jsonb[],
  presentedForm Attachment[],
);

create table if not exists internal.genomicstudy (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  type jsonb[],
  subject jsonb not null,
  encounter jsonb,
  startDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _startDate jsonb,
  basedOn jsonb[],
  referrer jsonb,
  interpreter jsonb[],
  reason CodeableReference[],
  instantiatesCanonical text,
  instantiatesUri text,
  _instantiatesUri jsonb,
  note Annotation[],
  description text,
  _description jsonb,
  analysis GenomicStudyAnalysis[],
);

create table if not exists internal.imagingselection (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  subject jsonb,
  issued timestamp with time zone default timezone('utc'::text, now()) not null,
  _issued jsonb,
  performer ImagingSelectionPerformer[],
  basedOn jsonb[],
  category jsonb[],
  code jsonb not null,
  studyUid text,
  _studyUid jsonb,
  derivedFrom jsonb[],
  endpoint jsonb[],
  seriesUid text,
  _seriesUid jsonb,
  seriesNumber int,
  _seriesNumber jsonb,
  frameOfReferenceUid text,
  _frameOfReferenceUid jsonb,
  bodySite CodeableReference,
  focus jsonb[],
  instance ImagingSelectionInstance[],
);

create table if not exists internal.imagingstudy (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  modality jsonb[],
  subject jsonb not null,
  encounter jsonb,
  started timestamp with time zone default timezone('utc'::text, now()) not null,
  _started jsonb,
  basedOn jsonb[],
  partOf jsonb[],
  referrer jsonb,
  endpoint jsonb[],
  numberOfSeries int,
  _numberOfSeries jsonb,
  numberOfInstances int,
  _numberOfInstances jsonb,
  procedure CodeableReference[],
  location jsonb,
  reason CodeableReference[],
  note Annotation[],
  description text,
  _description jsonb,
  series ImagingStudySeries[],
);

create table if not exists internal.molecularsequence (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  type text,
  _type jsonb,
  subject jsonb,
  focus jsonb[],
  specimen jsonb,
  device jsonb,
  performer jsonb,
  literal text,
  _literal jsonb,
  formatted Attachment[],
  relative MolecularSequenceRelative[],
);

create table if not exists internal.observation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text,
  _instantiatesCanonical jsonb,
  instantiatesReference jsonb,
  basedOn jsonb[],
  triggeredBy ObservationTriggeredBy[],
  partOf jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  code jsonb not null,
  subject jsonb,
  focus jsonb[],
  encounter jsonb,
  effectiveDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _effectiveDateTime jsonb,
  effectivePeriod Period,
  effectiveTiming Timing,
  effectiveInstant timestamp with time zone default timezone('utc'::text, now()) not null,
  _effectiveInstant jsonb,
  issued timestamp with time zone default timezone('utc'::text, now()) not null,
  _issued jsonb,
  performer jsonb[],
  valueQuantity Quantity,
  valueCodeableConcept jsonb,
  valueString text,
  _valueString jsonb,
  valueBoolean boolean,
  _valueBoolean jsonb,
  valueInteger int,
  _valueInteger jsonb,
  valueRange Range,
  valueRatio Ratio,
  valueSampledData SampledData,
  valueTime text,
  _valueTime jsonb,
  valueDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _valueDateTime jsonb,
  valuePeriod Period,
  valueAttachment Attachment,
  valueReference jsonb,
  dataAbsentReason jsonb,
  interpretation jsonb[],
  note Annotation[],
  bodySite jsonb,
  bodyStructure jsonb,
  method jsonb,
  specimen jsonb,
  device jsonb,
  referenceRange ObservationReferenceRange[],
  hasMember jsonb[],
  derivedFrom jsonb[],
  component ObservationComponent[],
);

create table if not exists internal.questionnaireresponse (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  questionnaire text not null,
  status text,
  _status jsonb,
  subject jsonb,
  encounter jsonb,
  authored timestamp with time zone default timezone('utc'::text, now()) not null,
  _authored jsonb,
  author jsonb,
  source jsonb,
  item QuestionnaireResponseItem[],
);

create table if not exists internal.specimen (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  accessionIdentifier jsonb,
  status text,
  _status jsonb,
  type jsonb,
  subject jsonb,
  receivedTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _receivedTime jsonb,
  parent jsonb[],
  request jsonb[],
  combined text,
  _combined jsonb,
  role jsonb[],
  feature SpecimenFeature[],
  collection SpecimenCollection,
  processing SpecimenProcessing[],
  container SpecimenContainer[],
  condition jsonb[],
  note Annotation[],
);

create table if not exists internal.adverseevent (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  actuality text,
  _actuality jsonb,
  category jsonb[],
  code jsonb,
  subject jsonb not null,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  detected timestamp with time zone default timezone('utc'::text, now()) not null,
  _detected jsonb,
  recordedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _recordedDate jsonb,
  resultingEffect jsonb[],
  location jsonb,
  seriousness jsonb,
  outcome jsonb[],
  recorder jsonb,
  participant AdverseEventParticipant[],
  study jsonb[],
  expectedInResearchStudy boolean,
  _expectedInResearchStudy jsonb,
  suspectEntity AdverseEventSuspectEntity[],
  contributingFactor AdverseEventContributingFactor[],
  preventiveAction AdverseEventPreventiveAction[],
  mitigatingAction AdverseEventMitigatingAction[],
  supportingInfo AdverseEventSupportingInfo[],
  note Annotation[],
);

create table if not exists internal.allergyintolerance (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  clinicalStatus jsonb,
  verificationStatus jsonb,
  type jsonb,
  category text[],
  _category jsonb,
  criticality text,
  _criticality jsonb,
  code jsonb,
  patient jsonb not null,
  encounter jsonb,
  onsetDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _onsetDateTime jsonb,
  onsetAge Age,
  onsetPeriod Period,
  onsetRange Range,
  onsetString text,
  _onsetString jsonb,
  recordedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _recordedDate jsonb,
  participant AllergyIntoleranceParticipant[],
  lastOccurrence timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastOccurrence jsonb,
  note Annotation[],
  reaction AllergyIntoleranceReaction[],
);

create table if not exists internal.clinicalimpression (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb,
  description text,
  _description jsonb,
  subject jsonb not null,
  encounter jsonb,
  effectiveDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _effectiveDateTime jsonb,
  effectivePeriod Period,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  performer jsonb,
  previous jsonb,
  problem jsonb[],
  changePattern jsonb,
  protocol text[],
  _protocol jsonb,
  summary text,
  _summary jsonb,
  finding ClinicalImpressionFinding[],
  prognosisCodeableConcept jsonb[],
  prognosisReference jsonb[],
  supportingInfo jsonb[],
  note Annotation[],
);

create table if not exists internal.condition (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  clinicalStatus jsonb not null,
  verificationStatus jsonb,
  category jsonb[],
  severity jsonb,
  code jsonb,
  bodySite jsonb[],
  subject jsonb not null,
  encounter jsonb,
  onsetDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _onsetDateTime jsonb,
  onsetAge Age,
  onsetPeriod Period,
  onsetRange Range,
  onsetString text,
  _onsetString jsonb,
  abatementDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _abatementDateTime jsonb,
  abatementAge Age,
  abatementPeriod Period,
  abatementRange Range,
  abatementString text,
  _abatementString jsonb,
  recordedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _recordedDate jsonb,
  participant ConditionParticipant[],
  stage ConditionStage[],
  evidence CodeableReference[],
  note Annotation[],
);

create table if not exists internal.detectedissue (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  code jsonb,
  severity text,
  _severity jsonb,
  subject jsonb,
  encounter jsonb,
  identifiedDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _identifiedDateTime jsonb,
  identifiedPeriod Period,
  author jsonb,
  implicated jsonb[],
  evidence DetectedIssueEvidence[],
  detail text,
  _detail jsonb,
  reference text,
  _reference jsonb,
  mitigation DetectedIssueMitigation[],
);

create table if not exists internal.familymemberhistory (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  status text,
  _status jsonb,
  dataAbsentReason jsonb,
  patient jsonb not null,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  participant FamilyMemberHistoryParticipant[],
  name text,
  _name jsonb,
  relationship jsonb not null,
  sex jsonb,
  bornPeriod Period,
  bornDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _bornDate jsonb,
  bornString text,
  _bornString jsonb,
  ageAge Age,
  ageRange Range,
  ageString text,
  _ageString jsonb,
  estimatedAge boolean,
  _estimatedAge jsonb,
  deceasedBoolean boolean,
  _deceasedBoolean jsonb,
  deceasedAge Age,
  deceasedRange Range,
  deceasedDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _deceasedDate jsonb,
  deceasedString text,
  _deceasedString jsonb,
  reason CodeableReference[],
  note Annotation[],
  condition FamilyMemberHistoryCondition[],
  procedure FamilyMemberHistoryProcedure[],
);

create table if not exists internal.procedure (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb,
  category jsonb[],
  code jsonb,
  subject jsonb not null,
  focus jsonb,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceString text,
  _occurrenceString jsonb,
  occurrenceAge Age,
  occurrenceRange Range,
  occurrenceTiming Timing,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  recorder jsonb,
  reportedBoolean boolean,
  _reportedBoolean jsonb,
  reportedReference jsonb,
  performer ProcedurePerformer[],
  location jsonb,
  reason CodeableReference[],
  bodySite jsonb[],
  outcome jsonb,
  report jsonb[],
  complication CodeableReference[],
  followUp jsonb[],
  note Annotation[],
  focalDevice ProcedureFocalDevice[],
  used CodeableReference[],
  supportingInfo jsonb[],
);

create table if not exists internal.careplan (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  replaces jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  intent text,
  _intent jsonb,
  category jsonb[],
  title text,
  _title jsonb,
  description text,
  _description jsonb,
  subject jsonb not null,
  encounter jsonb,
  period Period,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  custodian jsonb,
  contributor jsonb[],
  careTeam jsonb[],
  addresses CodeableReference[],
  supportingInfo jsonb[],
  goal jsonb[],
  activity CarePlanActivity[],
  note Annotation[],
);

create table if not exists internal.careteam (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  name text,
  _name jsonb,
  subject jsonb,
  period Period,
  participant CareTeamParticipant[],
  reason CodeableReference[],
  managingOrganization jsonb[],
  telecom ContactPoint[],
  note Annotation[],
);

create table if not exists internal.goal (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  lifecycleStatus text,
  _lifecycleStatus jsonb,
  achievementStatus jsonb,
  category jsonb[],
  continuous boolean,
  _continuous jsonb,
  priority jsonb,
  description jsonb not null,
  subject jsonb not null,
  startDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _startDate jsonb,
  startCodeableConcept jsonb,
  target GoalTarget[],
  statusDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusDate jsonb,
  statusReason text,
  _statusReason jsonb,
  source jsonb,
  addresses jsonb[],
  note Annotation[],
  outcome CodeableReference[],
);

create table if not exists internal.nutritionintake (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb[],
  code jsonb,
  subject jsonb not null,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  reportedBoolean boolean,
  _reportedBoolean jsonb,
  reportedReference jsonb,
  consumedItem NutritionIntakeConsumedItem[] not null,
  ingredientLabel NutritionIntakeIngredientLabel[],
  performer NutritionIntakePerformer[],
  location jsonb,
  derivedFrom jsonb[],
  reason CodeableReference[],
  note Annotation[],
);

create table if not exists internal.nutritionorder (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  instantiates text[],
  _instantiates jsonb,
  basedOn jsonb[],
  groupIdentifier jsonb,
  status text,
  _status jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  subject jsonb not null,
  encounter jsonb,
  supportingInformation jsonb[],
  dateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _dateTime jsonb,
  orderer jsonb,
  performer CodeableReference[],
  allergyIntolerance jsonb[],
  foodPreferenceModifier jsonb[],
  excludeFoodModifier jsonb[],
  outsideFoodAllowed boolean,
  _outsideFoodAllowed jsonb,
  oralDiet NutritionOrderOralDiet,
  supplement NutritionOrderSupplement[],
  enteralFormula NutritionOrderEnteralFormula,
  note Annotation[],
);

create table if not exists internal.requestorchestration (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  _instantiatesCanonical jsonb,
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  replaces jsonb[],
  groupIdentifier jsonb,
  status text,
  _status jsonb,
  intent text,
  _intent jsonb,
  priority text,
  _priority jsonb,
  code jsonb,
  subject jsonb,
  encounter jsonb,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  author jsonb,
  reason CodeableReference[],
  goal jsonb[],
  note Annotation[],
  action RequestOrchestrationAction[],
);

create table if not exists internal.riskassessment (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb,
  parent jsonb,
  status text,
  _status jsonb,
  method jsonb,
  code jsonb,
  subject jsonb not null,
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  condition jsonb,
  performer jsonb,
  reason CodeableReference[],
  basis jsonb[],
  prediction RiskAssessmentPrediction[],
  mitigation text,
  _mitigation jsonb,
  note Annotation[],
);

create table if not exists internal.servicerequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  instantiatesCanonical text[],
  instantiatesUri text[],
  _instantiatesUri jsonb,
  basedOn jsonb[],
  replaces jsonb[],
  requisition jsonb,
  status text,
  _status jsonb,
  intent text,
  _intent jsonb,
  category jsonb[],
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  code CodeableReference,
  orderDetail ServiceRequestOrderDetail[],
  quantityQuantity Quantity,
  quantityRatio Ratio,
  quantityRange Range,
  subject jsonb not null,
  focus jsonb[],
  encounter jsonb,
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrencePeriod Period,
  occurrenceTiming Timing,
  asNeededBoolean boolean,
  _asNeededBoolean jsonb,
  asNeededCodeableConcept jsonb,
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  requester jsonb,
  performerType jsonb,
  performer jsonb[],
  location CodeableReference[],
  reason CodeableReference[],
  insurance jsonb[],
  supportingInfo CodeableReference[],
  specimen jsonb[],
  bodySite jsonb[],
  bodyStructure jsonb,
  note Annotation[],
  patientInstruction ServiceRequestPatientInstruction[],
  relevantHistory jsonb[],
);

create table if not exists internal.visionprescription (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  created timestamp with time zone default timezone('utc'::text, now()) not null,
  _created jsonb,
  patient jsonb not null,
  encounter jsonb,
  dateWritten timestamp with time zone default timezone('utc'::text, now()) not null,
  _dateWritten jsonb,
  prescriber jsonb not null,
  lensSpecification VisionPrescriptionLensSpecification[] not null,
);

create table if not exists internal.formularyitem (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  code jsonb,
  status text,
  _status jsonb,
);

create table if not exists internal.immunization (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb,
  vaccineCode jsonb not null,
  administeredProduct CodeableReference,
  manufacturer CodeableReference,
  lotNumber text,
  _lotNumber jsonb,
  expirationDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _expirationDate jsonb,
  patient jsonb not null,
  encounter jsonb,
  supportingInformation jsonb[],
  occurrenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurrenceDateTime jsonb,
  occurrenceString text,
  _occurrenceString jsonb,
  primarySource boolean,
  _primarySource jsonb,
  informationSource CodeableReference,
  location jsonb,
  site jsonb,
  route jsonb,
  doseQuantity Quantity,
  performer ImmunizationPerformer[],
  note Annotation[],
  reason CodeableReference[],
  isSubpotent boolean,
  _isSubpotent jsonb,
  subpotentReason jsonb[],
  programEligibility ImmunizationProgramEligibility[],
  fundingSource jsonb,
  reaction ImmunizationReaction[],
  protocolApplied ImmunizationProtocolApplied[],
);

create table if not exists internal.immunizationevaluation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  status text,
  _status jsonb,
  patient jsonb not null,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  authority jsonb,
  targetDisease jsonb not null,
  immunizationEvent jsonb not null,
  doseStatus jsonb not null,
  doseStatusReason jsonb[],
  description text,
  _description jsonb,
  series text,
  _series jsonb,
  doseNumber text,
  _doseNumber jsonb,
  seriesDoses text,
  _seriesDoses jsonb,
);

create table if not exists internal.immunizationrecommendation (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  patient jsonb not null,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  authority jsonb,
  recommendation ImmunizationRecommendationRecommendation[] not null,
);

create table if not exists internal.medication (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  code jsonb,
  status text,
  _status jsonb,
  marketingAuthorizationHolder jsonb,
  doseForm jsonb,
  totalVolume Quantity,
  ingredient MedicationIngredient[],
  batch MedicationBatch,
  definition jsonb,
);

create table if not exists internal.medicationadministration (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  statusReason jsonb[],
  category jsonb[],
  medication CodeableReference not null,
  subject jsonb not null,
  encounter jsonb,
  supportingInformation jsonb[],
  occurenceDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _occurenceDateTime jsonb,
  occurencePeriod Period,
  occurenceTiming Timing,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  isSubPotent boolean,
  _isSubPotent jsonb,
  subPotentReason jsonb[],
  performer MedicationAdministrationPerformer[],
  reason CodeableReference[],
  request jsonb,
  device CodeableReference[],
  note Annotation[],
  dosage MedicationAdministrationDosage,
  eventHistory jsonb[],
);

create table if not exists internal.medicationdispense (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  notPerformedReason CodeableReference,
  statusChanged timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusChanged jsonb,
  category jsonb[],
  medication CodeableReference not null,
  subject jsonb not null,
  encounter jsonb,
  supportingInformation jsonb[],
  performer MedicationDispensePerformer[],
  location jsonb,
  authorizingPrescription jsonb[],
  type jsonb,
  quantity Quantity,
  daysSupply Quantity,
  recorded timestamp with time zone default timezone('utc'::text, now()) not null,
  _recorded jsonb,
  whenPrepared timestamp with time zone default timezone('utc'::text, now()) not null,
  _whenPrepared jsonb,
  whenHandedOver timestamp with time zone default timezone('utc'::text, now()) not null,
  _whenHandedOver jsonb,
  destination jsonb,
  receiver jsonb[],
  note Annotation[],
  renderedDosageInstruction text,
  _renderedDosageInstruction jsonb,
  dosageInstruction Dosage[],
  substitution MedicationDispenseSubstitution,
  eventHistory jsonb[],
);

create table if not exists internal.medicationknowledge (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  url text,
  _url jsonb,
  identifier jsonb[],
  version text,
  _version jsonb,
  versionAlgorithmString text,
  _versionAlgorithmString jsonb,
  versionAlgorithmCoding Coding,
  name text[],
  _name jsonb,
  title text,
  _title jsonb,
  status text,
  _status jsonb,
  experimental boolean,
  _experimental jsonb,
  date timestamp with time zone default timezone('utc'::text, now()) not null,
  _date jsonb,
  publisher text,
  _publisher jsonb,
  contact ContactDetail[],
  description text,
  _description jsonb,
  useContext UsageContext[],
  jurisdiction jsonb[],
  purpose text,
  _purpose jsonb,
  copyright text,
  _copyright jsonb,
  copyrightLabel text,
  _copyrightLabel jsonb,
  approvalDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _approvalDate jsonb,
  lastReviewDate timestamp with time zone default timezone('utc'::text, now()) not null,
  _lastReviewDate jsonb,
  effectivePeriod Period,
  topic jsonb[],
  author jsonb,
  editor ContactDetail[],
  reviewer ContactDetail[],
  endorser ContactDetail[],
  relatedArtifact RelatedArtifact[],
  code jsonb,
  intendedJurisdiction jsonb[],
  relatedMedicationKnowledge jsonb[],
  associatedMedication jsonb[],
  productType jsonb[],
  monograph MedicationKnowledgeMonograph[],
  preparationInstruction text,
  _preparationInstruction jsonb,
  cost MedicationKnowledgeCost[],
  monitoringProgram MedicationKnowledgeMonitoringProgram[],
  indicationGuideline MedicationKnowledgeIndicationGuideline[],
  medicineClassification MedicationKnowledgeMedicineClassification[],
  packaging MedicationKnowledgePackaging[],
  clinicalUseIssue jsonb[],
  storageGuideline MedicationKnowledgeStorageGuideline[],
  regulatory MedicationKnowledgeRegulatory[],
  definitional MedicationKnowledgeDefinitional,
);

create table if not exists internal.medicationrequest (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  basedOn jsonb[],
  priorPrescription jsonb,
  groupIdentifier jsonb,
  status text,
  _status jsonb,
  statusReason jsonb,
  statusChanged timestamp with time zone default timezone('utc'::text, now()) not null,
  _statusChanged jsonb,
  intent text,
  _intent jsonb,
  category jsonb[],
  priority text,
  _priority jsonb,
  doNotPerform boolean,
  _doNotPerform jsonb,
  medication CodeableReference not null,
  subject jsonb not null,
  informationSource jsonb[],
  encounter jsonb,
  supportingInformation jsonb[],
  authoredOn timestamp with time zone default timezone('utc'::text, now()) not null,
  _authoredOn jsonb,
  requester jsonb,
  reported boolean,
  _reported jsonb,
  performerType jsonb,
  performer jsonb[],
  device CodeableReference[],
  recorder jsonb,
  reason CodeableReference[],
  courseOfTherapyType jsonb,
  insurance jsonb[],
  note Annotation[],
  renderedDosageInstruction text,
  _renderedDosageInstruction jsonb,
  effectiveDosePeriod Period,
  dosageInstruction Dosage[],
  dispenseRequest MedicationRequestDispenseRequest,
  substitution MedicationRequestSubstitution,
  eventHistory jsonb[],
);

create table if not exists internal.medicationstatement (
  id text primary key,
  versionid int not null,
  updatedat timestamp with time zone default timezone('utc'::text, now()) not null,
  resource jsonb not null,
  meta jsonb,
  implicitRules text,
  _implicitRules jsonb,
  language text,
  _language jsonb,
  text jsonb,
  contained jsonb[],
  extension_ jsonb[],
  modifierExtension jsonb[],
  identifier jsonb[],
  partOf jsonb[],
  status text,
  _status jsonb,
  category jsonb[],
  medication CodeableReference not null,
  subject jsonb not null,
  encounter jsonb,
  effectiveDateTime timestamp with time zone default timezone('utc'::text, now()) not null,
  _effectiveDateTime jsonb,
  effectivePeriod Period,
  effectiveTiming Timing,
  dateAsserted timestamp with time zone default timezone('utc'::text, now()) not null,
  _dateAsserted jsonb,
  informationSource jsonb[],
  derivedFrom jsonb[],
  reason CodeableReference[],
  note Annotation[],
  relatedClinicalInformation jsonb[],
  renderedDosageInstruction text,
  _renderedDosageInstruction jsonb,
  dosage Dosage[],
  adherence MedicationStatementAdherence,
);

