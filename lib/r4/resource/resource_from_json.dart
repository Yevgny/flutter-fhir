part of 'resource.dart';

/// Acts like a constructor, returns a [Resource], accepts a
/// [Map<String, Dynamic>] as an argument
Resource _resourceFromJson(Map<String, dynamic> json) {
  final R4ResourceType? resourceType =
      resourceTypeFromStringMap[json['resourceType']];
  return switch (resourceType) {
    R4ResourceType.Account => Account.fromJson(json),
    R4ResourceType.ActivityDefinition => ActivityDefinition.fromJson(json),
    R4ResourceType.AdministrableProductDefinition => AdministrableProductDefinition.fromJson(json),
    R4ResourceType.AdverseEvent => AdverseEvent.fromJson(json),
    R4ResourceType.AllergyIntolerance => AllergyIntolerance.fromJson(json),
    R4ResourceType.Appointment => Appointment.fromJson(json),
    R4ResourceType.AppointmentResponse => AppointmentResponse.fromJson(json),
    R4ResourceType.AuditEvent => AuditEvent.fromJson(json),
    R4ResourceType.Basic => Basic.fromJson(json),
    R4ResourceType.Binary => Binary.fromJson(json),
    R4ResourceType.BiologicallyDerivedProduct => BiologicallyDerivedProduct.fromJson(json),
    R4ResourceType.BodyStructure => BodyStructure.fromJson(json),
    R4ResourceType.Bundle => Bundle.fromJson(json),
    R4ResourceType.CapabilityStatement => CapabilityStatement.fromJson(json),
    R4ResourceType.CarePlan => CarePlan.fromJson(json),
    R4ResourceType.CareTeam => CareTeam.fromJson(json),
    R4ResourceType.CatalogEntry => CatalogEntry.fromJson(json),
    R4ResourceType.ChargeItem => ChargeItem.fromJson(json),
    R4ResourceType.ChargeItemDefinition => ChargeItemDefinition.fromJson(json),
    R4ResourceType.Citation => Citation.fromJson(json),
    R4ResourceType.Claim => Claim.fromJson(json),
    R4ResourceType.ClaimResponse => ClaimResponse.fromJson(json),
    R4ResourceType.ClinicalImpression => ClinicalImpression.fromJson(json),
    R4ResourceType.ClinicalUseDefinition => ClinicalUseDefinition.fromJson(json),
    R4ResourceType.CodeSystem => CodeSystem.fromJson(json),
    R4ResourceType.Communication => Communication.fromJson(json),
    R4ResourceType.CommunicationRequest => CommunicationRequest.fromJson(json),
    R4ResourceType.CompartmentDefinition => CompartmentDefinition.fromJson(json),
    R4ResourceType.Composition => Composition.fromJson(json),
    R4ResourceType.ConceptMap => ConceptMap.fromJson(json),
    R4ResourceType.Condition => Condition.fromJson(json),
    R4ResourceType.Consent => Consent.fromJson(json),
    R4ResourceType.Contract => Contract.fromJson(json),
    R4ResourceType.Coverage => Coverage.fromJson(json),
    R4ResourceType.CoverageEligibilityRequest => CoverageEligibilityRequest.fromJson(json),
    R4ResourceType.CoverageEligibilityResponse => CoverageEligibilityResponse.fromJson(json),
    R4ResourceType.DetectedIssue => DetectedIssue.fromJson(json),
    R4ResourceType.Device => Device.fromJson(json),
    R4ResourceType.DeviceDefinition => DeviceDefinition.fromJson(json),
    R4ResourceType.DeviceMetric => DeviceMetric.fromJson(json),
    R4ResourceType.DeviceRequest => DeviceRequest.fromJson(json),
    R4ResourceType.DeviceUseStatement => DeviceUseStatement.fromJson(json),
    R4ResourceType.DiagnosticReport => DiagnosticReport.fromJson(json),
    R4ResourceType.DocumentManifest => DocumentManifest.fromJson(json),
    R4ResourceType.DocumentReference => DocumentReference.fromJson(json),
    R4ResourceType.Encounter => Encounter.fromJson(json),
    R4ResourceType.Endpoint => FhirEndpoint.fromJson(json),
    R4ResourceType.EnrollmentRequest => EnrollmentRequest.fromJson(json),
    R4ResourceType.EnrollmentResponse => EnrollmentResponse.fromJson(json),
    R4ResourceType.EpisodeOfCare => EpisodeOfCare.fromJson(json),
    R4ResourceType.EventDefinition => EventDefinition.fromJson(json),
    R4ResourceType.Evidence => Evidence.fromJson(json),
    R4ResourceType.EvidenceReport => EvidenceReport.fromJson(json),
    R4ResourceType.EvidenceVariable => EvidenceVariable.fromJson(json),
    R4ResourceType.ExampleScenario => ExampleScenario.fromJson(json),
    R4ResourceType.ExplanationOfBenefit => ExplanationOfBenefit.fromJson(json),
    R4ResourceType.FamilyMemberHistory => FamilyMemberHistory.fromJson(json),
    R4ResourceType.Flag => Flag.fromJson(json),
    R4ResourceType.Goal => Goal.fromJson(json),
    R4ResourceType.GraphDefinition => GraphDefinition.fromJson(json),
    R4ResourceType.Group => FhirGroup.fromJson(json),
    R4ResourceType.GuidanceResponse => GuidanceResponse.fromJson(json),
    R4ResourceType.HealthcareService => HealthcareService.fromJson(json),
    R4ResourceType.ImagingStudy => ImagingStudy.fromJson(json),
    R4ResourceType.Immunization => Immunization.fromJson(json),
    R4ResourceType.ImmunizationEvaluation => ImmunizationEvaluation.fromJson(json),
    R4ResourceType.ImmunizationRecommendation => ImmunizationRecommendation.fromJson(json),
    R4ResourceType.ImplementationGuide => ImplementationGuide.fromJson(json),
    R4ResourceType.Ingredient => Ingredient.fromJson(json),
    R4ResourceType.InsurancePlan => InsurancePlan.fromJson(json),
    R4ResourceType.Invoice => Invoice.fromJson(json),
    R4ResourceType.Library => Library.fromJson(json),
    R4ResourceType.Linkage => Linkage.fromJson(json),
    R4ResourceType.List => FhirList.fromJson(json),
    R4ResourceType.Location => Location.fromJson(json),
    R4ResourceType.ManufacturedItemDefinition => ManufacturedItemDefinition.fromJson(json),
    R4ResourceType.Measure => Measure.fromJson(json),
    R4ResourceType.MeasureReport => MeasureReport.fromJson(json),
    R4ResourceType.Media => Media.fromJson(json),
    R4ResourceType.Medication => Medication.fromJson(json),
    R4ResourceType.MedicationAdministration => MedicationAdministration.fromJson(json),
    R4ResourceType.MedicationDispense => MedicationDispense.fromJson(json),
    R4ResourceType.MedicationKnowledge => MedicationKnowledge.fromJson(json),
    R4ResourceType.MedicationRequest => MedicationRequest.fromJson(json),
    R4ResourceType.MedicationStatement => MedicationStatement.fromJson(json),
    R4ResourceType.MedicinalProductDefinition => MedicinalProductDefinition.fromJson(json),
    R4ResourceType.MessageDefinition => MessageDefinition.fromJson(json),
    R4ResourceType.MessageHeader => MessageHeader.fromJson(json),
    R4ResourceType.MolecularSequence => MolecularSequence.fromJson(json),
    R4ResourceType.NamingSystem => NamingSystem.fromJson(json),
    R4ResourceType.NutritionOrder => NutritionOrder.fromJson(json),
    R4ResourceType.NutritionProduct => NutritionProduct.fromJson(json),
    R4ResourceType.Observation => Observation.fromJson(json),
    R4ResourceType.ObservationDefinition => ObservationDefinition.fromJson(json),
    R4ResourceType.OperationDefinition => OperationDefinition.fromJson(json),
    R4ResourceType.OperationOutcome => OperationOutcome.fromJson(json),
    R4ResourceType.Organization => Organization.fromJson(json),
    R4ResourceType.OrganizationAffiliation => OrganizationAffiliation.fromJson(json),
    R4ResourceType.PackagedProductDefinition => PackagedProductDefinition.fromJson(json),
    R4ResourceType.Parameters => Parameters.fromJson(json),
    R4ResourceType.Patient => Patient.fromJson(json),
    R4ResourceType.PaymentNotice => PaymentNotice.fromJson(json),
    R4ResourceType.PaymentReconciliation => PaymentReconciliation.fromJson(json),
    R4ResourceType.Person => Person.fromJson(json),
    R4ResourceType.PlanDefinition => PlanDefinition.fromJson(json),
    R4ResourceType.Practitioner => Practitioner.fromJson(json),
    R4ResourceType.PractitionerRole => PractitionerRole.fromJson(json),
    R4ResourceType.Procedure => Procedure.fromJson(json),
    R4ResourceType.Provenance => Provenance.fromJson(json),
    R4ResourceType.Questionnaire => Questionnaire.fromJson(json),
    R4ResourceType.QuestionnaireResponse => QuestionnaireResponse.fromJson(json),
    R4ResourceType.RegulatedAuthorization => RegulatedAuthorization.fromJson(json),
    R4ResourceType.RelatedPerson => RelatedPerson.fromJson(json),
    R4ResourceType.RequestGroup => RequestGroup.fromJson(json),
    R4ResourceType.ResearchDefinition => ResearchDefinition.fromJson(json),
    R4ResourceType.ResearchElementDefinition => ResearchElementDefinition.fromJson(json),
    R4ResourceType.ResearchStudy => ResearchStudy.fromJson(json),
    R4ResourceType.ResearchSubject => ResearchSubject.fromJson(json),
    R4ResourceType.RiskAssessment => RiskAssessment.fromJson(json),
    R4ResourceType.Schedule => Schedule.fromJson(json),
    R4ResourceType.SearchParameter => SearchParameter.fromJson(json),
    R4ResourceType.ServiceRequest => ServiceRequest.fromJson(json),
    R4ResourceType.Slot => Slot.fromJson(json),
    R4ResourceType.Specimen => Specimen.fromJson(json),
    R4ResourceType.SpecimenDefinition => SpecimenDefinition.fromJson(json),
    R4ResourceType.StructureDefinition => StructureDefinition.fromJson(json),
    R4ResourceType.StructureMap => StructureMap.fromJson(json),
    R4ResourceType.Subscription => Subscription.fromJson(json),
    R4ResourceType.SubscriptionStatus => SubscriptionStatus.fromJson(json),
    R4ResourceType.SubscriptionTopic => SubscriptionTopic.fromJson(json),
    R4ResourceType.Substance => Substance.fromJson(json),
    R4ResourceType.SubstanceDefinition => SubstanceDefinition.fromJson(json),
    R4ResourceType.SupplyDelivery => SupplyDelivery.fromJson(json),
    R4ResourceType.SupplyRequest => SupplyRequest.fromJson(json),
    R4ResourceType.Task => Task.fromJson(json),
    R4ResourceType.TerminologyCapabilities => TerminologyCapabilities.fromJson(json),
    R4ResourceType.TestReport => TestReport.fromJson(json),
    R4ResourceType.TestScript => TestScript.fromJson(json),
    R4ResourceType.ValueSet => ValueSet.fromJson(json),
    R4ResourceType.VerificationResult => VerificationResult.fromJson(json),
    R4ResourceType.VisionPrescription => VisionPrescription.fromJson(json),
    _ => throw UnsupportedError(
          "You have passed Resource.fromJson a type doesn't exist or is null. "
          'In this case, the resourceType is $resourceType.')
  };
}
